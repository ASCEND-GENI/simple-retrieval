({'messages': [{'content': '# Knowledge Graph Instructions for GPT-4\n## 1. Overview\nYou are a top-tier algorithm designed for extracting information in structured formats to build a knowledge graph.\nTry to capture as much information from the text as possible without sacrifing accuracy. Do not add any information that is not explicitly mentioned in the text\n- **Nodes** represent entities and concepts.\n- The aim is to achieve simplicity and clarity in the knowledge graph, making it\naccessible for a vast audience.\n## 2. Labeling Nodes\n- **Consistency**: Ensure you use available types for node labels.\nEnsure you use basic or elementary types for node labels.\n- For example, when you identify an entity representing a person, always label it as **\'person\'**. Avoid using more specific terms like \'mathematician\' or \'scientist\'  - **Node IDs**: Never utilize integers as node IDs. Node IDs should be names or human-readable identifiers found in the text.\n- **Relationships** represent connections between entities or concepts.\nEnsure consistency and generality in relationship types when constructing knowledge graphs. Instead of using specific and momentary types such as \'BECAME_PROFESSOR\', use more general and timeless relationship types like \'PROFESSOR\'. Make sure to use general and timeless relationship types!\n## 3. Coreference Resolution\n- **Maintain Entity Consistency**: When extracting entities, it\'s vital to ensure consistency.\nIf an entity, such as "John Doe", is mentioned multiple times in the text but is referred to by different names or pronouns (e.g., "Joe", "he"),always use the most complete identifier for that entity throughout the knowledge graph. In this example, use "John Doe" as the entity ID.\nRemember, the knowledge graph should be coherent and easily understandable, so maintaining consistency in entity references is crucial.\n## 4. Strict Compliance\nAdhere to the rules strictly. Non-compliance will result in termination.', 'role': 'system'}, {'content': "Tip: Make sure to answer in the correct format and do not include any explanations. Use the given format to extract information from the following input: Small modular reactors (SMRs) are a class of small nuclear fission reactors, designed to be built in a factory, shipped to operational sites for installation and then used to power buildings or other commercial operations. The first commercial SMR was invented by a team of nuclear scientists at Oregon State University (OSU) in 2007. Working with OSU's prototype, NuScale Power developed the first working model, available to the US market, in 2022. The term SMR refers to the size, capacity and modular construction. Reactor type and the nuclear processes may vary. Of the many SMR designs, the pressurized water reactor (PWR) is the most common. However, recently proposed SMR designs include: generation IV, thermal-neutron reactors, fast-neutron reactors, molten salt, and gas-cooled reactor models.\nMilitary specified small reactors were first designed in the 1950s to power ballistic missile submarines and ships (aircraft carriers and ice breakers) with nuclear propulsion. The electrical output for modern naval reactors are generally limited to less than 165 MWe and dedicated to powering turboshaft props rather than delivering commercial electricity. In addition, there are many more safety controls absent from naval reactors due to the space limitations these reactors were designed for.\nCommercial SMRs can be designed to deliver an electrical power output as low as 5 MWe (electric) or a maximum of 300 MWe per module. SMRs may also be designed purely for desalinization or facility heating rather than electricity. These SMRs are measured in megawatts thermal MWt. Many SMR designs rely on a modular system, allowing customers to simply add modules to achieve a desired megawatt output (MWe). Some SMR designs, typically those using Generation IV reactors technologies, aim to secure additional economic advantage through improvements in electrical generating efficiency from much higher temperature steam generation. Ideally, modular reactors are expected to reduce on-site construction, increase containment efficiency, and claim to enhance safety. However, other SMR manufacturers claim greater safety should come through the application of passive safety features that operate without human intervention. Passive safety is a concept already implemented in some conventional nuclear reactor types. SMRs should also help reduce power plant staffing costs, as their operation is fairly simple. and are claimed to have the ability to bypass financial and safety barriers that inhibit the construction of conventional reactors.\nAs of 2023, only China and Russia have successfully built operational SMRs. The US Department of Energy had estimated the first SMR in the United States would be completed by NuScale Power around 2030, but this deal has since fallen through after the customers backed out due to rising costs. There are more than 80 modular reactor designs under development in 19 countries. Russia has been operating a floating nuclear power plant Akademik Lomonosov, in Russia's Far East (Pevek), since October 2022. The floating plant is the first of its kind in the world. China's pebble-bed modular high-temperature gas-cooled reactor HTR-PM was connected to the grid in 2021.\nSMRs differ in terms of staffing, safety and deployment time. US government studies to evaluate SMR-associated risks are claimed to have slowed the licensing process. One main concern with SMRs and their large number, needed to reach an economic profitability, is preventing nuclear proliferation.\n\n\n== Background ==\n\n\n=== Hope of enhanced safety and reduced costs ===\nEconomic factors of scale mean that nuclear reactors tend to be large, to such an extent that size itself becomes a limiting factor. The 1986 Chernobyl disaster and the 2011 Fukushima nuclear disaster caused a major set-back for the nuclear industry, with worldwide suspension of development, cutting down of funding, and closure of reactor plants.\nIn response, researchers at Oregon State University introduced a new stra", 'role': 'user'}], 'model': 'gpt-4-0125-preview', 'frequency_penalty': NOT_GIVEN, 'function_call': NOT_GIVEN, 'functions': NOT_GIVEN, 'logit_bias': NOT_GIVEN, 'logprobs': NOT_GIVEN, 'max_tokens': NOT_GIVEN, 'n': 1, 'presence_penalty': NOT_GIVEN, 'response_format': NOT_GIVEN, 'seed': NOT_GIVEN, 'stop': NOT_GIVEN, 'stream': False, 'temperature': 0.0, 'tool_choice': {'type': 'function', 'function': {'name': 'DynamicGraph'}}, 'tools': [{'type': 'function', 'function': {'name': 'DynamicGraph', 'description': 'Represents a graph document consisting of nodes and relationships.', 'parameters': {'type': 'object', 'properties': {'nodes': {'description': 'List of nodes', 'type': 'array', 'items': {'description': 'Represents a node in a graph with associated properties.', 'type': 'object', 'properties': {'id': {'description': 'Name or human-readable unique identifier.', 'type': 'string'}, 'type': {'description': "The type or label of the node.Ensure you use basic or elementary types for node labels.\nFor example, when you identify an entity representing a person, always label it as **'Person'**. Avoid using more specific terms like 'Mathematician' or 'Scientist'", 'type': 'string'}}, 'required': ['id', 'type']}}, 'relationships': {'description': 'List of relationships', 'type': 'array', 'items': {'description': 'Represents a directed relationship between two nodes in a graph.', 'type': 'object', 'properties': {'source_node_id': {'description': 'Name or human-readable unique identifier of source node', 'type': 'string'}, 'source_node_type': {'description': "The type or label of the source node.Ensure you use basic or elementary types for node labels.\nFor example, when you identify an entity representing a person, always label it as **'Person'**. Avoid using more specific terms like 'Mathematician' or 'Scientist'", 'type': 'string'}, 'target_node_id': {'description': 'Name or human-readable unique identifier of target node', 'type': 'string'}, 'target_node_type': {'description': "The type or label of the target node.Ensure you use basic or elementary types for node labels.\nFor example, when you identify an entity representing a person, always label it as **'Person'**. Avoid using more specific terms like 'Mathematician' or 'Scientist'", 'type': 'string'}, 'type': {'description': "The type of the relationship.Instead of using specific and momentary types such as 'BECAME_PROFESSOR', use more general and timeless relationship types like 'PROFESSOR'. However, do not sacrifice any accuracy for generality", 'type': 'string'}}, 'required': ['source_node_id', 'source_node_type', 'target_node_id', 'target_node_type', 'type']}}}}}}], 'top_logprobs': NOT_GIVEN, 'top_p': NOT_GIVEN, 'user': NOT_GIVEN},)