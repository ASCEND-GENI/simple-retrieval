({'messages': [{'content': '# Knowledge Graph Instructions for GPT-4\n## 1. Overview\nYou are a top-tier algorithm designed for extracting information in structured formats to build a knowledge graph.\nTry to capture as much information from the text as possible without sacrifing accuracy. Do not add any information that is not explicitly mentioned in the text\n- **Nodes** represent entities and concepts.\n- The aim is to achieve simplicity and clarity in the knowledge graph, making it\naccessible for a vast audience.\n## 2. Labeling Nodes\n- **Consistency**: Ensure you use available types for node labels.\nEnsure you use basic or elementary types for node labels.\n- For example, when you identify an entity representing a person, always label it as **\'person\'**. Avoid using more specific terms like \'mathematician\' or \'scientist\'  - **Node IDs**: Never utilize integers as node IDs. Node IDs should be names or human-readable identifiers found in the text.\n- **Relationships** represent connections between entities or concepts.\nEnsure consistency and generality in relationship types when constructing knowledge graphs. Instead of using specific and momentary types such as \'BECAME_PROFESSOR\', use more general and timeless relationship types like \'PROFESSOR\'. Make sure to use general and timeless relationship types!\n## 3. Coreference Resolution\n- **Maintain Entity Consistency**: When extracting entities, it\'s vital to ensure consistency.\nIf an entity, such as "John Doe", is mentioned multiple times in the text but is referred to by different names or pronouns (e.g., "Joe", "he"),always use the most complete identifier for that entity throughout the knowledge graph. In this example, use "John Doe" as the entity ID.\nRemember, the knowledge graph should be coherent and easily understandable, so maintaining consistency in entity references is crucial.\n## 4. Strict Compliance\nAdhere to the rules strictly. Non-compliance will result in termination.', 'role': 'system'}, {'content': 'Tip: Make sure to answer in the correct format and do not include any explanations. Use the given format to extract information from the following input: Corium, also called fuel-containing material (FCM) or lava-like fuel-containing material (LFCM), is a material that is created in a nuclear reactor core during a nuclear meltdown accident. Resembling lava in consistency, it consists of a mixture of nuclear fuel, fission products, control rods, structural materials from the affected parts of the reactor, products of their chemical reaction with air, water, steam, and in the event that the reactor vessel is breached, molten concrete from the floor of the reactor room.\n\n\n== Composition and formation ==\nThe heat causing the melting of a reactor may originate from the nuclear chain reaction, but more commonly decay heat of the fission products contained in the fuel rods is the primary heat source. The heat production from radioactive decay drops quickly, as the short half-life isotopes provide most of the heat and radioactive decay, with the curve of decay heat being a sum of the decay curves of numerous isotopes of elements decaying at different exponential half-life rates. A significant additional heat source can be the chemical reaction of hot metals with oxygen or steam.\nHypothetically, the temperature of corium depends on its internal heat generation dynamics: the quantities and types of isotopes producing decay heat, dilution by other molten materials, heat losses modified by the corium physical configuration, and heat losses to the environment. An accumulated mass of corium will lose less heat than a thinly spread layer. Corium of sufficient temperature can melt concrete. A solidified mass of corium can remelt if its heat losses drop, by being covered with heat insulating debris, or if water that is cooling the corium evaporates.\nCrust can form on the corium mass, acting as a thermal insulator and hindering thermal losses. Heat distribution throughout the corium mass is influenced by different thermal conductivity between the molten oxides and metals. Convection in the liquid phase significantly increases heat transfer. \nThe molten reactor core releases volatile elements and compounds. These may be gas phase, such as molecular iodine or noble gases, or condensed aerosol particles after leaving the high temperature region. A high proportion of aerosol particles originates from the reactor control rod materials. The gaseous compounds may be adsorbed on the surface of the aerosol particles.\n\n\n=== Composition and reactions ===\nThe composition of corium depends on the design type of the reactor, and specifically on the materials used in the control rods, coolant and reactor vessel structural materials. There are differences between pressurized water reactor (PWR) and boiling water reactor (BWR) coriums.\nIn contact with water, hot boron carbide from BWR reactor control rods forms first boron oxide and methane, then boric acid. Boron may also continue to contribute to reactions by the boric acid in an emergency coolant.\nZirconium from zircaloy, together with other metals, reacts with water and produces zirconium dioxide and hydrogen. The production of hydrogen is a major danger in reactor accidents. The balance between oxidizing and reducing chemical environments and the proportion of water and hydrogen influences the formation of chemical compounds. Variations in the volatility of core materials influence the ratio of released elements to unreleased elements. For instance, in an inert atmosphere, the silver-indium-cadmium alloy of control rods releases almost only cadmium. In the presence of water, the indium forms volatile indium(I) oxide and indium(I) hydroxide, which can evaporate and form an aerosol of indium(III) oxide. The indium oxidation is inhibited by a hydrogen-rich atmosphere, resulting in lower indium releases. Caesium and iodine from the fission products can react to produce volatile caesium iodide, which condenses as an aerosol.\nDuring a meltdown, the temperature of the fuel rods increases and they can deform, in the case of zircaloy cladding, above 700–900 °C (1,29', 'role': 'user'}], 'model': 'gpt-4-0125-preview', 'frequency_penalty': NOT_GIVEN, 'function_call': NOT_GIVEN, 'functions': NOT_GIVEN, 'logit_bias': NOT_GIVEN, 'logprobs': NOT_GIVEN, 'max_tokens': NOT_GIVEN, 'n': 1, 'presence_penalty': NOT_GIVEN, 'response_format': NOT_GIVEN, 'seed': NOT_GIVEN, 'stop': NOT_GIVEN, 'stream': False, 'temperature': 0.0, 'tool_choice': {'type': 'function', 'function': {'name': 'DynamicGraph'}}, 'tools': [{'type': 'function', 'function': {'name': 'DynamicGraph', 'description': 'Represents a graph document consisting of nodes and relationships.', 'parameters': {'type': 'object', 'properties': {'nodes': {'description': 'List of nodes', 'type': 'array', 'items': {'description': 'Represents a node in a graph with associated properties.', 'type': 'object', 'properties': {'id': {'description': 'Name or human-readable unique identifier.', 'type': 'string'}, 'type': {'description': "The type or label of the node.Ensure you use basic or elementary types for node labels.\nFor example, when you identify an entity representing a person, always label it as **'Person'**. Avoid using more specific terms like 'Mathematician' or 'Scientist'", 'type': 'string'}}, 'required': ['id', 'type']}}, 'relationships': {'description': 'List of relationships', 'type': 'array', 'items': {'description': 'Represents a directed relationship between two nodes in a graph.', 'type': 'object', 'properties': {'source_node_id': {'description': 'Name or human-readable unique identifier of source node', 'type': 'string'}, 'source_node_type': {'description': "The type or label of the source node.Ensure you use basic or elementary types for node labels.\nFor example, when you identify an entity representing a person, always label it as **'Person'**. Avoid using more specific terms like 'Mathematician' or 'Scientist'", 'type': 'string'}, 'target_node_id': {'description': 'Name or human-readable unique identifier of target node', 'type': 'string'}, 'target_node_type': {'description': "The type or label of the target node.Ensure you use basic or elementary types for node labels.\nFor example, when you identify an entity representing a person, always label it as **'Person'**. Avoid using more specific terms like 'Mathematician' or 'Scientist'", 'type': 'string'}, 'type': {'description': "The type of the relationship.Instead of using specific and momentary types such as 'BECAME_PROFESSOR', use more general and timeless relationship types like 'PROFESSOR'. However, do not sacrifice any accuracy for generality", 'type': 'string'}}, 'required': ['source_node_id', 'source_node_type', 'target_node_id', 'target_node_type', 'type']}}}}}}], 'top_logprobs': NOT_GIVEN, 'top_p': NOT_GIVEN, 'user': NOT_GIVEN},)