{'messages': [{'content': '# Knowledge Graph Instructions for GPT-4\n## 1. Overview\nYou are a top-tier algorithm designed for extracting information in structured formats to build a knowledge graph.\nTry to capture as much information from the text as possible without sacrifing accuracy. Do not add any information that is not explicitly mentioned in the text\n- **Nodes** represent entities and concepts.\n- The aim is to achieve simplicity and clarity in the knowledge graph, making it\naccessible for a vast audience.\n## 2. Labeling Nodes\n- **Consistency**: Ensure you use available types for node labels.\nEnsure you use basic or elementary types for node labels.\n- For example, when you identify an entity representing a person, always label it as **\'person\'**. Avoid using more specific terms like \'mathematician\' or \'scientist\'  - **Node IDs**: Never utilize integers as node IDs. Node IDs should be names or human-readable identifiers found in the text.\n- **Relationships** represent connections between entities or concepts.\nEnsure consistency and generality in relationship types when constructing knowledge graphs. Instead of using specific and momentary types such as \'BECAME_PROFESSOR\', use more general and timeless relationship types like \'PROFESSOR\'. Make sure to use general and timeless relationship types!\n## 3. Coreference Resolution\n- **Maintain Entity Consistency**: When extracting entities, it\'s vital to ensure consistency.\nIf an entity, such as "John Doe", is mentioned multiple times in the text but is referred to by different names or pronouns (e.g., "Joe", "he"),always use the most complete identifier for that entity throughout the knowledge graph. In this example, use "John Doe" as the entity ID.\nRemember, the knowledge graph should be coherent and easily understandable, so maintaining consistency in entity references is crucial.\n## 4. Strict Compliance\nAdhere to the rules strictly. Non-compliance will result in termination.', 'role': 'system'}, {'content': 'Tip: Make sure to answer in the correct format and do not include any explanations. Use the given format to extract information from the following input: \nMarie Curie, was a Polish and naturalised-French physicist and chemist who conducted pioneering research on radioactivity.\nShe was the first woman to win a Nobel Prize, the first person to win a Nobel Prize twice, and the only person to win a Nobel Prize in two scientific fields.\nHer husband, Pierre Curie, was a co-winner of her first Nobel Prize, making them the first-ever married couple to win the Nobel Prize and launching the Curie family legacy of five Nobel Prizes.\nShe was, in 1906, the first woman to become a professor at the University of Paris.\n', 'role': 'user'}], 'model': 'gpt-4-0125-preview', 'frequency_penalty': NOT_GIVEN, 'function_call': NOT_GIVEN, 'functions': NOT_GIVEN, 'logit_bias': NOT_GIVEN, 'logprobs': NOT_GIVEN, 'max_tokens': NOT_GIVEN, 'n': 1, 'presence_penalty': NOT_GIVEN, 'response_format': NOT_GIVEN, 'seed': NOT_GIVEN, 'stop': NOT_GIVEN, 'stream': False, 'temperature': 0.0, 'tool_choice': {'type': 'function', 'function': {'name': 'DynamicGraph'}}, 'tools': [{'type': 'function', 'function': {'name': 'DynamicGraph', 'description': 'Represents a graph document consisting of nodes and relationships.', 'parameters': {'type': 'object', 'properties': {'nodes': {'description': 'List of nodes', 'type': 'array', 'items': {'description': 'Represents a node in a graph with associated properties.', 'type': 'object', 'properties': {'id': {'description': 'Name or human-readable unique identifier.', 'type': 'string'}, 'type': {'description': "The type or label of the node.Ensure you use basic or elementary types for node labels.\nFor example, when you identify an entity representing a person, always label it as **'Person'**. Avoid using more specific terms like 'Mathematician' or 'Scientist'", 'type': 'string'}}, 'required': ['id', 'type']}}, 'relationships': {'description': 'List of relationships', 'type': 'array', 'items': {'description': 'Represents a directed relationship between two nodes in a graph.', 'type': 'object', 'properties': {'source_node_id': {'description': 'Name or human-readable unique identifier of source node', 'type': 'string'}, 'source_node_type': {'description': "The type or label of the source node.Ensure you use basic or elementary types for node labels.\nFor example, when you identify an entity representing a person, always label it as **'Person'**. Avoid using more specific terms like 'Mathematician' or 'Scientist'", 'type': 'string'}, 'target_node_id': {'description': 'Name or human-readable unique identifier of target node', 'type': 'string'}, 'target_node_type': {'description': "The type or label of the target node.Ensure you use basic or elementary types for node labels.\nFor example, when you identify an entity representing a person, always label it as **'Person'**. Avoid using more specific terms like 'Mathematician' or 'Scientist'", 'type': 'string'}, 'type': {'description': "The type of the relationship.Instead of using specific and momentary types such as 'BECAME_PROFESSOR', use more general and timeless relationship types like 'PROFESSOR'. However, do not sacrifice any accuracy for generality", 'type': 'string'}}, 'required': ['source_node_id', 'source_node_type', 'target_node_id', 'target_node_type', 'type']}}}}}}], 'top_logprobs': NOT_GIVEN, 'top_p': NOT_GIVEN, 'user': NOT_GIVEN}